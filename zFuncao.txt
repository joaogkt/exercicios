Funções - Parte 2

-> Interactive help
-> Docstrings
-> Argumentos opcionais
-> Escopo de variáveis
-> Retorno de resultados
--------------------------------------------------------------------------

Interactive Help - help()

- Ajuda interativa

ex: help('print'), help('input')
-------------------------------------------------------------------------

sorted(lista) - ordenar a lista em valor crescente

sorted(lista), reverse=True - ordenar a lista em valor decrescente

len(lista) - retorna o numero de itens presentes na lista
--------------------------------------------------------------------------

Docstrings - retorna texto entre 3 aspas duplas explicando a função e seus
parametros

Exemplo:

def contador(i, f, p)
    """
    => Faz uma contagem e mostra na tela.
    :param i: inicio da contagem
    :param f: fim da contagem
    :param p: passo da contagem
    :return: sem retorno
    """
    c = i
    while c <= f:
        print(f'{c}', end='..')
        c += p
    print('FIM')


contador(2,10,2)
help(contador)
--------------------------------------------------------------------------

Argumentos opcionais - Iguala o parametro a zero para não precisar ser declarado

def soma(a=0, b=0, c=0):  #Caso nao seja informado, os parametros serão igual a 0
    s = a + b + c
    print(f'A soma vale {s}')                    

soma(3, 2, 5) = 12
soma(8, 4) = 12
soma() = 0
--------------------------------------------------------------------------

Escopo de variaveis -

Escopo global - Variavel declarada fora da função que consegue ser chamada por ela 
Escopo local - Variavel declarada dentro da função, não podendo ser acessada fora dela

def teste():
    global a #palavra reservada para a variavel local substituir e se tornar a global
    x = 8
    a = 8
    print(f'Na função teste, n vale {n}')
    print(f'Na função teste, x vale {x}')
    print(f'A variavel a vale {a}') #retornara o valor 8, pois foi feita a chamada da variavel global

a = 5
n = 2
print(f'No programa principal, n vale {n}') # n é uma variavel global
teste()
print(f'No programa principal, x vale {x}') # x é uma variavel local
print(f'A variavel a vale {a}') #retornará o valor 8
--------------------------------------------------------------------------

Retorno de valores -

def soma(a=0, b=0, c=0):
    s = a + b + c
    return s

s = soma(3,2,4)
s1 = soma(1, 7)
s2 = soma(4)
print(f'As somas valem {s}, {s1}, {s2}')
